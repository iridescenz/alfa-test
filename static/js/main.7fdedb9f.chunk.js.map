{"version":3,"sources":["redux/store.js","components/images/defaultRecipeImage.png","components/Card.js","components/CardsContainer.js","components/ViewToggleButton.js","components/config.js","components/LoadRecipesButton.js","components/RecipesComponent.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","recipes","liked","view","reducer","state","action","type","includes","payload","filter","recipe","id","store","createStore","composeWithDevTools","Card","title","image","fullRecipe","useState","like","setLike","changeColor","useSelector","dispatch","useDispatch","className","onClick","icon","faTimes","faHeart","style","color","src","defaultRecipeImage","alt","href","CardsContainer","data","length","Fragment","map","sourceUrl","ViewToggleButton","config","LoadRecipesButton","e","a","console","log","apiKey","axios","get","then","response","catch","er","RecipesComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fdedb9f.chunk.js","sourcesContent":["import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst initialState = {\n  recipes: [],\n  liked: [],\n  view: 'all', //liked\n}\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'LIKED') {\n    return {\n      ...state,\n      liked: state.liked.includes(action.payload)\n        ? state.liked.filter((recipe) => recipe !== action.payload)\n        : [...state.liked, action.payload],\n    }\n  }\n  if (action.type === 'DELETE') {\n    return {\n      ...state,\n      recipes: state.recipes.filter((recipe) => recipe.id !== action.payload),\n    }\n  }\n  if (action.type === 'SET_RECIPES') {\n    return { ...state, recipes: action.payload }\n  }\n  if (action.type === 'SET_VIEW') {\n    return { ...state, view: action.payload }\n  }\n  return state\n}\n\nexport const setLikedView = () => {\n  return {\n    type: 'SET_VIEW',\n    payload: 'liked',\n  }\n}\n\nexport const setAllView = () => {\n  return {\n    type: 'SET_VIEW',\n    payload: 'all',\n  }\n}\nexport const store = createStore(reducer, initialState, composeWithDevTools())\nexport const configureStore = (initialState) =>\n  createStore(reducer, initialState)\n","export default __webpack_public_path__ + \"static/media/defaultRecipeImage.a02d278d.png\";","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport defaultRecipeImage from './images/defaultRecipeImage.png'\n\nexport const Card = ({ title, image, fullRecipe, id }) => {\n  const [like, setLike] = useState(false)\n  const state = useSelector((state) => state)\n  const changeColor = like === false ? 'lightGray' : 'rgb(233, 56, 56)'\n  const dispatch = useDispatch()\n  return (\n    <div className='card'>\n      <div className='card-header'>\n        <div\n          className='delete'\n          onClick={() => {\n            dispatch({ type: 'DELETE', payload: id })\n          }}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n\n        <h2>{title}</h2>\n        <div\n          className='like'\n          onClick={() => {\n            dispatch({ type: 'LIKED', payload: id })\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            style={{ color: changeColor }}\n            onClick={() => setLike(!like)}\n          />\n        </div>\n      </div>\n\n      <img\n        src={image ? image : defaultRecipeImage}\n        alt={title}\n      />\n      <a href={fullRecipe}>see recipe</a>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card } from './Card'\nimport { useSelector } from 'react-redux'\n\nexport const CardsContainer = () => {\n  const view = useSelector((state) => state.view)\n  const data = useSelector(({ recipes, liked, view }) => {\n    if (view === 'all') {\n      return recipes\n    }\n    return recipes.filter((recipe) => liked.includes(recipe.id))\n  })\n\n  if (data.length === 0) {\n    return <h2>nothing to show</h2>\n  }\n\n  return (\n    <React.Fragment>\n      <h2 className='view-header'>{view} recipes</h2>\n      <div className='card-container'>\n        {data.map(\n          (recipe) =>\n            recipe.title && (\n              <Card\n                key={recipe.id}\n                id={recipe.id}\n                title={recipe.title}\n                image={recipe.image}\n                fullRecipe={recipe.sourceUrl}\n              />\n            )\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setLikedView, setAllView } from '../redux/store'\n\nexport const ViewToggleButton = () => {\n  const view = useSelector((state) => state.view)\n  const dispatch = useDispatch()\n  if (view === 'all') {\n    return (\n      <div className='button'>\n        <button onClick={() => dispatch(setLikedView())}>show liked</button>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <button onClick={() => dispatch(setAllView())}>show all</button>\n    </div>\n  )\n}\n","export var config = { \n  API_KEY: `e74d9376b06c40798035256addcf980a`,\n}\n\n","import React from 'react'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { config } from './config'\n\nexport const LoadRecipesButton = () => {\n  const dispatch = useDispatch()\n  async function getRecipes(e) {\n    console.log('>>>>> getRecipes')\n    const apiKey = config.API_KEY\n    await axios\n      .get(\n        `https://api.spoonacular.com/recipes/random?&apiKey=${apiKey}&number=33`\n      )\n      .then((response) => {\n        dispatch({ type: 'SET_RECIPES', payload: response.data.recipes })\n      })\n      .catch((er) => console.log('err', er))\n  }\n\n  return (\n    <button onClick={getRecipes} className='button' type='button'>\n      Get random recipes\n    </button>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { CardsContainer } from './CardsContainer'\nimport { ViewToggleButton } from './ViewToggleButton'\nimport { LoadRecipesButton } from './LoadRecipesButton'\n\nexport const RecipesComponent = () => {\n  const recipes = useSelector((state) => state.recipes)\n\n  if (recipes.length === 0) {\n    return <LoadRecipesButton />\n  }\n\n  return (\n    <div>\n      <ViewToggleButton />\n      <CardsContainer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport { RecipesComponent } from './components/RecipesComponent'\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <div className='pg-container'>\n        <RecipesComponent />\n      </div>\n    </Provider>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals()\n"],"sourceRoot":""}