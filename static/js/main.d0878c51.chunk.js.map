{"version":3,"sources":["redux/store.js","components/config.js","components/images/defaultRecipeImage.png","components/Card.js","components/CardsContainer.js","components/RecipesComponent.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","showData","recipes","liked","likedRecipes","store","createStore","state","action","type","includes","payload","filter","recipe","id","config","Card","title","image","fullRecipe","useState","like","setLike","useSelector","changeColor","dispatch","useDispatch","className","onClick","icon","faTimes","faHeart","style","color","console","log","src","defaultRecipeImage","alt","href","CardsContainer","data","recipesList","map","sourceUrl","length","RecipesComponent","setLiked","changeFilterLikeColor","toggleLike","e","a","preventDefault","apiKey","axios","get","then","catch","er","onSubmit","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0878c51.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\nconst initialState = {\n  showData: [],\n  recipes: [],\n  liked: [],\n  likedRecipes: [],\n}\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'LIKED') {\n    return {\n      ...state,\n      liked: state.liked.includes(action.payload)\n        ? state.liked.filter((recipe) => recipe !== action.payload)\n        : [...state.liked, action.payload],\n    }\n  }\n  if (action.type === 'DELETE') {\n    return {\n      ...state,\n      showData: state.recipes.filter((recipe) => recipe.id !== action.payload),\n      recipes: state.recipes.filter((recipe) => recipe.id !== action.payload),\n    }\n  }\n  if (action.type === 'SET_RECIPES') {\n    return { ...state, recipes: action.payload, showData: action.payload }\n  }\n  if (action.type === 'SHOW_LIKED') {\n    return { ...state, likedRecipes: state.recipes.filter((recipe) => state.liked.includes(recipe.id)), showData:  state.recipes.filter((recipe) => state.liked.includes(recipe.id))}\n  }\n  if (action.type === 'SHOW_ALL') {\n    return { ...state, showData: state.recipes }\n  }\n  return state\n}\nexport const store = createStore(reducer)\n","export var config = { \n  API_KEY: `e74d9376b06c40798035256addcf980a`,\n}\n\n","export default __webpack_public_path__ + \"static/media/defaultRecipeImage.a02d278d.png\";","import React, { useState } from 'react'\nimport { useDispatch, useSelector} from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport defaultRecipeImage from './images/defaultRecipeImage.png'\n\nexport const Card = ({ title, image, fullRecipe, id }) => {\n  const [like, setLike] = useState(false)\n  const state = useSelector((state) => state)\n  const changeColor = like === false ? 'lightGray' : 'rgb(233, 56, 56)'\n  const dispatch = useDispatch()\n  return (\n    <div className='card'>\n      <div className='card-header'>\n        <div\n          className='delete'\n          onClick={() => {\n            dispatch({ type: 'DELETE', payload: id })\n          }}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n\n        <h2>{title}</h2>\n        <div\n          className='like'\n          onClick={() => {\n            dispatch({ type: 'LIKED', payload: id })\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            style={{ color: changeColor }}\n            onClick={() => setLike(!like)}\n          />\n        </div>\n      </div>\n\n      <img\n      onClick={() => console.log(state)}\n        src={image ? image : defaultRecipeImage}\n        alt={title}\n      />\n      <a href={fullRecipe}>see recipe</a>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card } from './Card'\nimport { useSelector } from 'react-redux'\n\nexport const CardsContainer = () => {\n  const data = useSelector((state) => state.showData)\n  const recipesList =\n    data &&\n    data.map(\n      (recipe) =>\n        recipe.title && (\n          <Card\n            key={recipe.id}\n            id={recipe.id}\n            title={recipe.title}\n            image={recipe.image}\n            fullRecipe={recipe.sourceUrl}\n          />\n        )\n    )\n  return <div className='card-container'>{recipesList.length > 0 ? recipesList : <h2>nothing to show</h2>}</div>\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { config } from './config'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CardsContainer } from './CardsContainer'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const RecipesComponent = () => {\n  const recipes = useSelector((state) => state.recipes)\n  const [liked, setLiked] = useState(false)\n  const changeFilterLikeColor = liked === false ? 'lightGray' : 'rgb(233, 56, 56)'\n  const dispatch = useDispatch()\n  const toggleLike =\n    liked === false\n      ? dispatch({ type: 'SHOW_ALL' })\n      : dispatch({ type: 'SHOW_LIKED' })\n  async function getRecipes(e) {\n    e.preventDefault()\n    const apiKey = config.API_KEY\n    await axios\n      .get(\n        `https://api.spoonacular.com/recipes/random?&apiKey=${apiKey}&number=33`\n      )\n      .then((recipes) =>\n        dispatch({ type: 'SET_RECIPES', payload: recipes.data.recipes })\n      )\n      .catch((er) => console.log(er))\n  }\n\n  return (\n    <div>\n      {recipes.length === 0 ? (\n        <form onSubmit={getRecipes}>\n          <button className='button' type='submit'>\n            Get random recipes\n          </button>\n        </form>\n      ) : (\n        <div>\n          <div\n            className='show-liked'\n            onClick={() => setLiked(!liked) && toggleLike}\n          >\n          <div> liked recipes</div>\n            <FontAwesomeIcon icon={faHeart} style={{ color: changeFilterLikeColor }} />\n          </div>\n          <CardsContainer />\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport { RecipesComponent } from './components/RecipesComponent'\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <div className='pg-container'>\n        <RecipesComponent />\n      </div>\n    </Provider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}